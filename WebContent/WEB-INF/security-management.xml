<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"

	xsi:schemaLocation="
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.4.xsd
		http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring 
		http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd		
		">

	<!-- <context:property-placeholder properties-ref="deployProperties" /> -->

	<bean id="passwordService" class="org.apache.shiro.authc.credential.DefaultPasswordService"/>
	<bean id="passwordMatcher" class="org.apache.shiro.authc.credential.PasswordMatcher">
		<property name="passwordService" ref="passwordService"/>
	</bean>
	
	<bean id="myRealm" class="com.reversebid.service.security.MongoRealm">
		<property name="credentialsMatcher" ref="passwordMatcher"/>
	</bean>
		
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- Single realm app. If you have multiple realms, use the 'realms' property instead. -->
		<property name="realm" ref="myRealm" />
		<!-- property name="cacheManager" ref="cacheManager"/ -->
		<!-- By default the servlet container sessions will be used. Uncomment this line to use shiro's native sessions (see the JavaDoc for more): -->
<!-- 		<property name="sessionMode" value="native"/>-->
	</bean>
	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
	    <property name="securityManager" ref="securityManager"/>
	    <property name="loginUrl" value="/adminLogin"/>
	    <property name="successUrl" value="/admin/index"/>
	    <property name="unauthorizedUrl" value="/adminUnauthorized"/>
		    <property name="filterChainDefinitions">
	        <value>
	            /admin/** = authc, roles[admin]
	            /mygoals/** roles[patient]
	        </value>
	    </property>
	</bean>
 	
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- Enable Shiro Annotations for Spring-configured beans. Only run after the lifecycleBeanProcessor has run: -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	    <property name="securityManager" ref="securityManager"/>
	</bean>

	<bean id="AESCipher" class="org.apache.shiro.crypto.AesCipherService">
		<property name="keySize" value="256"></property>
	</bean>
	
	<!--  <bean id="cryptoBean" class="com.mediresource.security.crypto.SymmetricCryptoService">
		<property name="cipherService" ref="AESCipher"/>
	</bean> -->
	
	<!--  Old: KeyManager based on file-->
	<!-- <bean id="keyManagerBean" class="com.mediresource.security.keymanager.LocalKeyManager">
		<constructor-arg type="String"><value>pwd</value></constructor-arg>
	</bean> -->
	
	<!--  New: KeyManager based on Mongo-->
	<!-- <bean id="mongoKeyManagerBean" class="com.mediresource.security.keymanager.MongoKeyManager"> -->
		<!--  PASSWORD MUST BE PROVIDED RUNTIME OR IN CRYPTOMANAGER CONFIG -->
		<!--  The only lenght supported is 32 characters-->
		<!--  constructor-arg type="String"><value>01234567012345670123456701234567</value></constructor-arg -->
	<!-- </bean> -->
	

	<!--  User only for Tests -->
	<!-- <bean id="keyManagerDAO" class="com.mediresource.security.keymanager.dao.KeyManagerDAO">
	</bean>  -->
	
	<!-- <bean id="acl" class="com.mediresource.security.secure.service.ACLService">
		<property name="deliveryService" ref="deliveryBean"/>
	</bean>   -->
	
	<!-- The manager must be always provided -->
	<!--  bean id="cryptoManager" class="com.mediresource.security.crypto.CryptoManager"/ -->
	
	<!--<bean id="cryptoManager" class="com.mediresource.security.crypto.CryptoManager" init-method="activate">
	
		<constructor-arg type="String"><value>${secret.path}</value></constructor-arg>
		
		<property name="cryptoService" ref="cryptoBean"/>
		<property name="keyManagerService" ref="mongoKeyManagerBean"/>
		<property name="anonProfile" value="true"/>
		
	</bean>  -->
	
	

</beans>
